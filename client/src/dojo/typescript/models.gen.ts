
// Generated by dojo-bindgen on Fri, 30 Aug 2024 15:37:01 +0000. Do not modify this file manually.
// Import the necessary types from the recs SDK
// generate again with `sozo build --typescript` 
import { defineComponent, Type as RecsType, World } from "@dojoengine/recs";

export type ContractComponents = Awaited<ReturnType<typeof defineContractComponents>>;



// Type definition for `dojo::model::layout::Layout` enum
export type Layout = { type: 'Fixed'; value: RecsType.NumberArray; } | { type: 'Struct'; value: RecsType.StringArray; } | { type: 'Tuple'; value: RecsType.StringArray; } | { type: 'Array'; value: RecsType.StringArray; } | { type: 'ByteArray'; } | { type: 'Enum'; value: RecsType.StringArray; };

export const LayoutDefinition = {
    type: RecsType.String,
    value: RecsType.String
};
        
// Type definition for `tonatuna::models::index::Commitment` struct
export interface Commitment {
    player_id: BigInt;
    fish_pond_id: Number;
    value: BigInt;
    status: Number;
    timestamp: Number;
    
}
export const CommitmentDefinition = {
    player_id: RecsType.BigInt,
    fish_pond_id: RecsType.Number,
    value: RecsType.BigInt,
    status: RecsType.Number,
    timestamp: RecsType.Number,
    
};

// Type definition for `core::byte_array::ByteArray` struct
export interface ByteArray {
    data: String[];
    pending_word: BigInt;
    pending_word_len: Number;
    
}
export const ByteArrayDefinition = {
    data: RecsType.StringArray,
    pending_word: RecsType.BigInt,
    pending_word_len: RecsType.Number,
    
};

// Type definition for `dojo::model::layout::FieldLayout` struct
export interface FieldLayout {
    selector: BigInt;
    layout: Layout;
    
}
export const FieldLayoutDefinition = {
    selector: RecsType.BigInt,
    layout: LayoutDefinition,
    
};


// Type definition for `tonatuna::types::vec2::Vec2` struct
export interface Vec2 {
    x: Number;
    y: Number;
    
}
export const Vec2Definition = {
    x: RecsType.Number,
    y: RecsType.Number,
    
};

// Type definition for `tonatuna::models::index::Fish` struct
export interface Fish {
    fish_pond_id: Number;
    fish_id: Number;
    position: Vec2;
    weight: Number;
    status: Number;
    spawn_time: Number;
    
}
export const FishDefinition = {
    fish_pond_id: RecsType.Number,
    fish_id: RecsType.Number,
    position: Vec2Definition,
    weight: RecsType.Number,
    status: RecsType.Number,
    spawn_time: RecsType.Number,
    
};


// Type definition for `tonatuna::models::index::Player` struct
export interface Player {
    id: BigInt;
    name: BigInt;
    bait_balance: Number;
    fish_caught: Number;
    daily_attempts: Number;
    position: Vec2;
    
}
export const PlayerDefinition = {
    id: RecsType.BigInt,
    name: RecsType.BigInt,
    bait_balance: RecsType.Number,
    fish_caught: RecsType.Number,
    daily_attempts: RecsType.Number,
    position: Vec2Definition,
    
};


// Type definition for `tonatuna::models::index::RevealHistory` struct
export interface RevealHistory {
    fish_pond_id: Number;
    fish_id: Number;
    commit_timestamp: Number;
    reveal_timestamp: Number;
    count: Number;
    
}
export const RevealHistoryDefinition = {
    fish_pond_id: RecsType.Number,
    fish_id: RecsType.Number,
    commit_timestamp: RecsType.Number,
    reveal_timestamp: RecsType.Number,
    count: RecsType.Number,
    
};


// Type definition for `tonatuna::models::index::FishPond` struct
export interface FishPond {
    id: Number;
    fish_population: Number;
    max_fish_id: Number;
    daily_catch_limit: Number;
    rare_fish_chance: Number;
    daily_catches: Number;
    
}
export const FishPondDefinition = {
    id: RecsType.Number,
    fish_population: RecsType.Number,
    max_fish_id: RecsType.Number,
    daily_catch_limit: RecsType.Number,
    rare_fish_chance: RecsType.Number,
    daily_catches: RecsType.Number,
    
};


export function defineContractComponents(world: World) {
    return {

        // Model definition for `tonatuna::models::index::Commitment` model
        Commitment: (() => {
            return defineComponent(
                world,
                {
                    player_id: RecsType.BigInt,
                    fish_pond_id: RecsType.Number,
                    value: RecsType.BigInt,
                    status: RecsType.Number,
                    timestamp: RecsType.Number,
                },
                {
                    metadata: {
                        namespace: "tonatuna",
                        name: "Commitment",
                        types: ["felt252", "u32", "felt252", "u8", "u64"],
                        customTypes: [],
                    },
                }
            );
        })(),

        // Model definition for `tonatuna::models::index::Fish` model
        Fish: (() => {
            return defineComponent(
                world,
                {
                    fish_pond_id: RecsType.Number,
                    fish_id: RecsType.Number,
                    position: Vec2Definition,
                    weight: RecsType.Number,
                    status: RecsType.Number,
                    spawn_time: RecsType.Number,
                },
                {
                    metadata: {
                        namespace: "tonatuna",
                        name: "Fish",
                        types: ["u32", "u32", "u32", "u8", "u64"],
                        customTypes: ["Vec2"],
                    },
                }
            );
        })(),

        // Model definition for `tonatuna::models::index::Player` model
        Player: (() => {
            return defineComponent(
                world,
                {
                    id: RecsType.BigInt,
                    name: RecsType.BigInt,
                    bait_balance: RecsType.Number,
                    fish_caught: RecsType.Number,
                    daily_attempts: RecsType.Number,
                    position: Vec2Definition,
                },
                {
                    metadata: {
                        namespace: "tonatuna",
                        name: "Player",
                        types: ["felt252", "felt252", "u32", "u32", "u8"],
                        customTypes: ["Vec2"],
                    },
                }
            );
        })(),

        // Model definition for `tonatuna::models::index::RevealHistory` model
        RevealHistory: (() => {
            return defineComponent(
                world,
                {
                    fish_pond_id: RecsType.Number,
                    fish_id: RecsType.Number,
                    commit_timestamp: RecsType.Number,
                    reveal_timestamp: RecsType.Number,
                    count: RecsType.Number,
                },
                {
                    metadata: {
                        namespace: "tonatuna",
                        name: "RevealHistory",
                        types: ["u32", "u32", "u64", "u64", "u32"],
                        customTypes: [],
                    },
                }
            );
        })(),

        // Model definition for `tonatuna::models::index::FishPond` model
        FishPond: (() => {
            return defineComponent(
                world,
                {
                    id: RecsType.Number,
                    fish_population: RecsType.Number,
                    max_fish_id: RecsType.Number,
                    daily_catch_limit: RecsType.Number,
                    rare_fish_chance: RecsType.Number,
                    daily_catches: RecsType.Number,
                },
                {
                    metadata: {
                        namespace: "tonatuna",
                        name: "FishPond",
                        types: ["u32", "u32", "u32", "u32", "u8", "u32"],
                        customTypes: [],
                    },
                }
            );
        })(),
    };
}
